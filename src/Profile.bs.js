// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var RemoteData = require("remotedata-re/src/RemoteData.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");
var API$ReasonReactRealworldExampleApp = require("./API.bs.js");
var Utils$ReasonReactRealworldExampleApp = require("./Utils.bs.js");
var Decoder$ReasonReactRealworldExampleApp = require("./Decoder.bs.js");
var Pagination$ReasonReactRealworldExampleApp = require("./Pagination.bs.js");
var ArticleItem$ReasonReactRealworldExampleApp = require("./ArticleItem.bs.js");

function getAuthorParam(param) {
  if (param.tag) {
    return /* tuple */[
            undefined,
            param[0]
          ];
  } else {
    return /* tuple */[
            param[0],
            undefined
          ];
  }
}

function loadArticles(author, favorited, $staropt$star, _, param) {
  var send = param[/* send */3];
  var page = $staropt$star !== undefined ? $staropt$star : 1;
  var limit = 10;
  var offset = (page - 1) * 10 | 0;
  Curry._1(send, /* UpdateArticles */Block.__(4, [/* tuple */[
            /* Loading */1,
            0,
            page
          ]]));
  API$ReasonReactRealworldExampleApp.listArticles(undefined, author, favorited, limit, offset, /* () */0).then((function (result) {
            if (result.tag) {
              Curry._1(send, /* UpdateArticles */Block.__(4, [/* tuple */[
                        /* Failure */Block.__(0, ["failed to fetch list of articles by author"]),
                        0,
                        page
                      ]]));
            } else {
              var json = result[0];
              var articles = Belt_List.fromArray(Json_decode.field("articles", (function (param) {
                          return Json_decode.array(Decoder$ReasonReactRealworldExampleApp.article, param);
                        }), json));
              var articlesCount = Json_decode.field("articlesCount", Json_decode.$$float, json);
              Curry._1(send, /* UpdateArticles */Block.__(4, [/* tuple */[
                        /* Success */Block.__(1, [articles]),
                        articlesCount,
                        page
                      ]]));
            }
            return Promise.resolve(/* () */0);
          })).catch((function () {
          return Promise.resolve(Curry._1(send, /* UpdateArticles */Block.__(4, [/* tuple */[
                              /* Failure */Block.__(0, ["failed to fetch list of articles by author"]),
                              0,
                              page
                            ]])));
        }));
  return /* () */0;
}

function loadProfile(payload, param) {
  var send = param[/* send */3];
  Curry._1(send, /* UpdateProfile */Block.__(2, [/* Loading */1]));
  API$ReasonReactRealworldExampleApp.profiles(payload[0], /* () */0).then((function (result) {
            if (result.tag) {
              Curry._1(send, /* UpdateProfile */Block.__(2, [/* Failure */Block.__(0, ["failed to fetch profile"])]));
            } else {
              var profile = Json_decode.field("profile", Decoder$ReasonReactRealworldExampleApp.profile, result[0]);
              Curry._1(send, /* UpdateProfile */Block.__(2, [/* Success */Block.__(1, [profile])]));
            }
            return Promise.resolve(/* () */0);
          })).catch((function () {
          return Promise.resolve(Curry._1(send, /* UpdateProfile */Block.__(2, [/* Failure */Block.__(0, ["failed to fetch profile"])])));
        }));
  var match = getAuthorParam(payload);
  var favorited = match[1];
  var author = match[0];
  return Curry._2(param[/* handle */0], (function (eta) {
                return (function (param) {
                    var param$1 = undefined;
                    var param$2 = eta;
                    var param$3 = param;
                    return loadArticles(author, favorited, param$1, param$2, param$3);
                  });
              }), /* () */0);
}

function changeCurrentPage(payload, page, param) {
  var match = getAuthorParam(payload);
  var favorited = match[1];
  var author = match[0];
  var partial_arg = page;
  return Curry._2(param[/* handle */0], (function (param, param$1) {
                return loadArticles(author, favorited, partial_arg, param, param$1);
              }), /* () */0);
}

function followAuthorOrRedirectToSetting(profile, user, _, param) {
  var send = param[/* send */3];
  if (typeof user === "number" || user.tag !== 1) {
    return ReasonReact.Router[/* push */0]("/#/login");
  } else if (typeof profile === "number" || profile.tag !== 1) {
    return /* () */0;
  } else {
    var profileVal = profile[0];
    if (user[0][/* username */7] === profileVal[/* username */0]) {
      return ReasonReact.Router[/* push */0]("/#/settings");
    } else {
      var following = profileVal[/* following */3];
      var username = profileVal[/* username */0];
      Curry._1(send, /* UpdateFollowAction */Block.__(1, [/* Loading */1]));
      (
            following ? API$ReasonReactRealworldExampleApp.unfollowUser(username, /* () */0) : API$ReasonReactRealworldExampleApp.followUser(username, /* () */0)
          ).then((function () {
                Curry._1(send, /* UpdateProfile */Block.__(2, [/* Success */Block.__(1, [/* record */[
                              /* username */profileVal[/* username */0],
                              /* bio */profileVal[/* bio */1],
                              /* image */profileVal[/* image */2],
                              /* following */!following
                            ]])]));
                Curry._1(send, /* UpdateFollowAction */Block.__(1, [/* NotAsked */0]));
                return Promise.resolve(/* () */0);
              })).catch((function () {
              Curry._1(send, /* UpdateFollowAction */Block.__(1, [/* NotAsked */0]));
              return Promise.resolve(/* () */0);
            }));
      return /* () */0;
    }
  }
}

function favoriteArticle(user, param, param$1) {
  var send = param$1[/* send */3];
  var slug = param[0];
  if (typeof user === "number" || user.tag !== 1) {
    return ReasonReact.Router[/* push */0]("/#/login");
  } else {
    Curry._1(send, /* ToggleFavorite */Block.__(0, [
            slug,
            /* Loading */1
          ]));
    (
          param[1] ? API$ReasonReactRealworldExampleApp.favoriteArticle(slug, /* () */0) : API$ReasonReactRealworldExampleApp.unfavoriteArticle(slug, /* () */0)
        ).then((function (result) {
              if (result.tag) {
                console.log("failed to toggle favorite article", result[0]);
              } else {
                var article = Json_decode.field("article", Decoder$ReasonReactRealworldExampleApp.article, result[0]);
                Curry._1(send, /* UpdateArticle */Block.__(3, [
                        slug,
                        article
                      ]));
              }
              Curry._1(send, /* ToggleFavorite */Block.__(0, [
                      slug,
                      /* NotAsked */0
                    ]));
              return Promise.resolve(/* () */0);
            })).catch((function (error) {
            console.log("failed to toggle favorite article: ", error);
            Curry._1(send, /* ToggleFavorite */Block.__(0, [
                    slug,
                    /* NotAsked */0
                  ]));
            return Promise.resolve(/* () */0);
          }));
    return /* () */0;
  }
}

var component = ReasonReact.reducerComponentWithRetainedProps("Profile");

function make(user, author, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (param) {
              return Curry._2(param[/* handle */0], loadProfile, author);
            }),
          /* didUpdate */(function (param) {
              var newSelf = param[/* newSelf */1];
              if (param[/* oldSelf */0][/* retainedProps */2][/* author */0] !== newSelf[/* retainedProps */2][/* author */0]) {
                return Curry._2(newSelf[/* handle */0], loadProfile, newSelf[/* retainedProps */2][/* author */0]);
              } else {
                return 0;
              }
            }),
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var state = param[/* state */1];
              var togglingFavorites = state[/* togglingFavorites */5];
              var articles = state[/* articles */2];
              var profile = state[/* profile */1];
              var followAction = state[/* followAction */0];
              var handle = param[/* handle */0];
              var v = author[0];
              var tmp;
              tmp = typeof profile === "number" || profile.tag !== 1 ? "//placehold.it/100x100" : profile[0][/* image */2];
              var tmp$1;
              tmp$1 = typeof profile === "number" || profile.tag !== 1 ? Utils$ReasonReactRealworldExampleApp.nullEl : Utils$ReasonReactRealworldExampleApp.strEl(profile[0][/* username */0]);
              var tmp$2;
              if (typeof profile === "number" || profile.tag !== 1) {
                tmp$2 = Utils$ReasonReactRealworldExampleApp.nullEl;
              } else {
                var bio = profile[0][/* bio */1];
                tmp$2 = bio !== undefined ? Utils$ReasonReactRealworldExampleApp.strEl(bio) : Utils$ReasonReactRealworldExampleApp.nullEl;
              }
              var tmp$3;
              var exit = 0;
              if (typeof profile === "number" || !(profile.tag === 1 && !(typeof user === "number" || !(user.tag === 1 && user[0][/* username */7] === profile[0][/* username */0])))) {
                exit = 1;
              } else {
                tmp$3 = React.createElement("i", {
                      className: "ion-gear-a"
                    });
              }
              if (exit === 1) {
                tmp$3 = React.createElement("i", {
                      className: "ion-plus-round"
                    });
              }
              var tmp$4;
              if (typeof profile === "number") {
                tmp$4 = Utils$ReasonReactRealworldExampleApp.strEl(" ... ");
              } else if (profile.tag) {
                var profileVal = profile[0];
                var exit$1 = 0;
                if (typeof user === "number" || !(user.tag === 1 && user[0][/* username */7] === profileVal[/* username */0])) {
                  exit$1 = 1;
                } else {
                  tmp$4 = Utils$ReasonReactRealworldExampleApp.strEl(" Edit Profile Settings");
                }
                if (exit$1 === 1) {
                  tmp$4 = Utils$ReasonReactRealworldExampleApp.strEl((
                        profileVal[/* following */3] ? " Unfollow " : " Follow "
                      ) + profileVal[/* username */0]);
                }
                
              } else {
                tmp$4 = Utils$ReasonReactRealworldExampleApp.nullEl;
              }
              var tmp$5;
              tmp$5 = author.tag ? "" : " active";
              var tmp$6;
              tmp$6 = author.tag ? " active" : "";
              var tmp$7;
              tmp$7 = typeof articles === "number" ? (
                  articles === 0 ? React.createElement("div", {
                          className: "article-preview"
                        }, Utils$ReasonReactRealworldExampleApp.strEl("Initializing...")) : React.createElement("div", {
                          className: "article-preview"
                        }, Utils$ReasonReactRealworldExampleApp.strEl("Loading..."))
                ) : (
                  articles.tag ? Utils$ReasonReactRealworldExampleApp.arrayEl(Belt_List.toArray(Belt_List.mapU(articles[0], (function (value) {
                                    return ReasonReact.element(value[/* slug */0], undefined, ArticleItem$ReasonReactRealworldExampleApp.make(value, Curry._1(handle, (function (param, param$1) {
                                                          return favoriteArticle(user, param, param$1);
                                                        })), Belt_MapString.getWithDefault(togglingFavorites, value[/* slug */0], /* NotAsked */0) === /* Loading */1, /* array */[]));
                                  })))) : React.createElement("div", {
                          className: "article-preview"
                        }, Utils$ReasonReactRealworldExampleApp.strEl("ERROR: " + articles[0]))
                );
              var tmp$8;
              tmp$8 = typeof articles === "number" || articles.tag !== 1 ? Utils$ReasonReactRealworldExampleApp.nullEl : ReasonReact.element(undefined, undefined, Pagination$ReasonReactRealworldExampleApp.make(state[/* currentPage */4], state[/* articlesCount */3], 10, Curry._1(handle, (function (param, param$1) {
                                return changeCurrentPage(author, param, param$1);
                              })), /* array */[]));
              return React.createElement("div", {
                          className: "profile-page"
                        }, React.createElement("div", {
                              className: "user-info"
                            }, React.createElement("div", {
                                  className: "container"
                                }, React.createElement("div", {
                                      className: "row"
                                    }, React.createElement("div", {
                                          className: "col-xs-12 col-md-10 offset-md-1"
                                        }, React.createElement("img", {
                                              className: "user-img",
                                              src: tmp
                                            }), React.createElement("h4", undefined, tmp$1), React.createElement("p", undefined, tmp$2), React.createElement("button", {
                                              className: "btn btn-sm btn-outline-secondary action-btn",
                                              disabled: typeof followAction === "number" ? followAction !== 0 : false,
                                              onClick: Curry._1(handle, (function (param, param$1) {
                                                      return followAuthorOrRedirectToSetting(profile, user, param, param$1);
                                                    }))
                                            }, tmp$3, tmp$4))))), React.createElement("div", {
                              className: "container"
                            }, React.createElement("div", {
                                  className: "row"
                                }, React.createElement("div", {
                                      className: "col-xs-12 col-md-10 offset-md-1"
                                    }, React.createElement("div", {
                                          className: "articles-toggle"
                                        }, React.createElement("ul", {
                                              className: "nav nav-pills outline-active"
                                            }, React.createElement("li", {
                                                  className: "nav-item"
                                                }, React.createElement("a", {
                                                      className: "nav-link" + tmp$5,
                                                      href: "/#/profile/" + v
                                                    }, Utils$ReasonReactRealworldExampleApp.strEl("My Articles"))), React.createElement("li", {
                                                  className: "nav-item"
                                                }, React.createElement("a", {
                                                      className: "nav-link" + tmp$6,
                                                      href: "/#/profile/" + (v + "/favorites")
                                                    }, Utils$ReasonReactRealworldExampleApp.strEl("Favorited Articles"))))), tmp$7, tmp$8))));
            }),
          /* initialState */(function () {
              return /* record */[
                      /* followAction : NotAsked */0,
                      /* profile : NotAsked */0,
                      /* articles : NotAsked */0,
                      /* articlesCount */0,
                      /* currentPage */1,
                      /* togglingFavorites */Belt_MapString.empty
                    ];
            }),
          /* retainedProps : record */[/* author */author],
          /* reducer */(function (action, state) {
              switch (action.tag | 0) {
                case 0 : 
                    var value = action[1];
                    var togglingFavorites = Belt_MapString.update(state[/* togglingFavorites */5], action[0], (function () {
                            return value;
                          }));
                    return /* Update */Block.__(0, [/* record */[
                                /* followAction */state[/* followAction */0],
                                /* profile */state[/* profile */1],
                                /* articles */state[/* articles */2],
                                /* articlesCount */state[/* articlesCount */3],
                                /* currentPage */state[/* currentPage */4],
                                /* togglingFavorites */togglingFavorites
                              ]]);
                case 1 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* followAction */action[0],
                                /* profile */state[/* profile */1],
                                /* articles */state[/* articles */2],
                                /* articlesCount */state[/* articlesCount */3],
                                /* currentPage */state[/* currentPage */4],
                                /* togglingFavorites */state[/* togglingFavorites */5]
                              ]]);
                case 2 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* followAction */state[/* followAction */0],
                                /* profile */action[0],
                                /* articles */state[/* articles */2],
                                /* articlesCount */state[/* articlesCount */3],
                                /* currentPage */state[/* currentPage */4],
                                /* togglingFavorites */state[/* togglingFavorites */5]
                              ]]);
                case 3 : 
                    var article = action[1];
                    var slug = action[0];
                    var articles = RemoteData.map((function (articles) {
                            return Belt_List.map(articles, (function (x) {
                                          var match = x[/* slug */0] === slug;
                                          if (match) {
                                            return article;
                                          } else {
                                            return x;
                                          }
                                        }));
                          }), state[/* articles */2]);
                    return /* Update */Block.__(0, [/* record */[
                                /* followAction */state[/* followAction */0],
                                /* profile */state[/* profile */1],
                                /* articles */articles,
                                /* articlesCount */state[/* articlesCount */3],
                                /* currentPage */state[/* currentPage */4],
                                /* togglingFavorites */state[/* togglingFavorites */5]
                              ]]);
                case 4 : 
                    var match = action[0];
                    return /* Update */Block.__(0, [/* record */[
                                /* followAction */state[/* followAction */0],
                                /* profile */state[/* profile */1],
                                /* articles */match[0],
                                /* articlesCount */match[1],
                                /* currentPage */match[2],
                                /* togglingFavorites */state[/* togglingFavorites */5]
                              ]]);
                
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var pageNum = 10;

exports.pageNum = pageNum;
exports.getAuthorParam = getAuthorParam;
exports.loadArticles = loadArticles;
exports.loadProfile = loadProfile;
exports.changeCurrentPage = changeCurrentPage;
exports.followAuthorOrRedirectToSetting = followAuthorOrRedirectToSetting;
exports.favoriteArticle = favoriteArticle;
exports.component = component;
exports.make = make;
/* component Not a pure module */

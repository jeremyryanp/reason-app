// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var RemoteData = require("remotedata-re/src/RemoteData.js");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Belt_MapString = require("bs-platform/lib/js/belt_MapString.js");
var API$ReasonReactRealworldExampleApp = require("./API.bs.js");
var Utils$ReasonReactRealworldExampleApp = require("./Utils.bs.js");
var Decoder$ReasonReactRealworldExampleApp = require("./Decoder.bs.js");
var FileItem$ReasonReactRealworldExampleApp = require("./FileItem.bs.js");
var Pagination$ReasonReactRealworldExampleApp = require("./Pagination.bs.js");

function loadGlobalFeed(_, $staropt$star, _$1, param) {
  var send = param[/* send */3];
  var page = $staropt$star !== undefined ? $staropt$star : 1;
  var limit = 10;
  var offset = (page - 1) * 10 | 0;
  Curry._1(send, /* UpdateFiles */Block.__(6, [/* tuple */[
            /* Loading */1,
            0,
            page
          ]]));
  API$ReasonReactRealworldExampleApp.listFiles(limit, offset, /* () */0).then((function (result) {
            if (result.tag) {
              Curry._1(send, /* UpdateFiles */Block.__(6, [/* tuple */[
                        /* Failure */Block.__(0, ["failed to fetch list of files"]),
                        0,
                        1
                      ]]));
            } else {
              var files = Belt_List.fromArray(Json_decode.field("files", (function (param) {
                          return Json_decode.array(Decoder$ReasonReactRealworldExampleApp.file, param);
                        }), result[0]));
              Curry._1(send, /* UpdateFiles */Block.__(6, [/* tuple */[
                        /* Success */Block.__(1, [files]),
                        10,
                        page
                      ]]));
            }
            return Promise.resolve(/* () */0);
          })).catch((function () {
          return Promise.resolve(Curry._1(send, /* UpdateFiles */Block.__(6, [/* tuple */[
                              /* Failure */Block.__(0, ["failed to fetch list of files!"]),
                              0,
                              1
                            ]])));
        }));
  return /* () */0;
}

function onYourFeedClick(feed, $$event, param) {
  var send = param[/* send */3];
  $$event.preventDefault();
  if (typeof feed === "number" && feed !== 0) {
    return /* () */0;
  } else {
    return Curry._1(send, /* ChangeFeed */Block.__(1, [
                  /* Your */1,
                  1
                ]));
  }
}

function onGlobalFeedClick(feed, $$event, param) {
  var send = param[/* send */3];
  $$event.preventDefault();
  if (typeof feed === "number" && feed === 0) {
    return /* () */0;
  } else {
    return Curry._1(send, /* ChangeFeed */Block.__(1, [
                  /* Global */0,
                  1
                ]));
  }
}

function initialData(user, _, param) {
  var files = param[/* state */1][/* files */1];
  if (typeof files === "number" && !(files !== 0 || typeof user === "number")) {
    return Curry._1(param[/* send */3], /* ChangeFeed */Block.__(1, [
                  /* Global */0,
                  1
                ]));
  } else {
    return /* () */0;
  }
}

function favoriteArticle(user, param, param$1) {
  var send = param$1[/* send */3];
  var slug = param[0];
  if (typeof user === "number" || user.tag !== 1) {
    return ReasonReact.Router[/* push */0]("/#/login");
  } else {
    Curry._1(send, /* ToggleFavorite */Block.__(0, [
            slug,
            /* Loading */1
          ]));
    (
          param[1] ? API$ReasonReactRealworldExampleApp.favoriteArticle(slug, /* () */0) : API$ReasonReactRealworldExampleApp.unfavoriteArticle(slug, /* () */0)
        ).then((function (result) {
              if (result.tag) {
                console.log("failed to toggle favorite article: ", result[0]);
              } else {
                var article = Json_decode.field("article", Decoder$ReasonReactRealworldExampleApp.article, result[0]);
                Curry._1(send, /* UpdateArticle */Block.__(3, [
                        slug,
                        article
                      ]));
              }
              Curry._1(send, /* ToggleFavorite */Block.__(0, [
                      slug,
                      /* NotAsked */0
                    ]));
              return Promise.resolve(/* () */0);
            })).catch((function (error) {
            console.log("failed to toggle favorite article: ", error);
            Curry._1(send, /* ToggleFavorite */Block.__(0, [
                    slug,
                    /* NotAsked */0
                  ]));
            return Promise.resolve(/* () */0);
          }));
    return /* () */0;
  }
}

var component = ReasonReact.reducerComponent("Home");

function make(user, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */(function (param) {
              return Curry._2(param[/* handle */0], (function (param, param$1) {
                            return initialData(user, param, param$1);
                          }), /* () */0);
            }),
          /* didUpdate */(function (param) {
              return Curry._2(param[/* newSelf */1][/* handle */0], (function (param, param$1) {
                            return initialData(user, param, param$1);
                          }), /* () */0);
            }),
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (param) {
              var state = param[/* state */1];
              var feed = state[/* feed */6];
              var files = state[/* files */1];
              var send = param[/* send */3];
              var handle = param[/* handle */0];
              var tmp;
              if (typeof user === "number" || user.tag !== 1) {
                tmp = Utils$ReasonReactRealworldExampleApp.nullEl;
              } else {
                var match = feed === /* Your */1;
                tmp = React.createElement("li", {
                      className: "nav-item"
                    }, React.createElement("a", {
                          className: "nav-link" + (
                            match ? " active" : ""
                          ),
                          href: "#",
                          onClick: Curry._1(handle, (function (param, param$1) {
                                  return onYourFeedClick(feed, param, param$1);
                                }))
                        }, Utils$ReasonReactRealworldExampleApp.strEl("Your Feed")));
              }
              var match$1 = feed === /* Global */0;
              var tmp$1;
              tmp$1 = typeof files === "number" ? (
                  files === 0 ? React.createElement("div", {
                          className: "article-preview"
                        }, Utils$ReasonReactRealworldExampleApp.strEl("Initializing...")) : React.createElement("div", {
                          className: "article-preview"
                        }, Utils$ReasonReactRealworldExampleApp.strEl("Loading..."))
                ) : (
                  files.tag ? Utils$ReasonReactRealworldExampleApp.arrayEl(Belt_List.toArray(Belt_List.mapU(files[0], (function (value) {
                                    return ReasonReact.element(value[/* guid */5], undefined, FileItem$ReasonReactRealworldExampleApp.make(value, /* array */[]));
                                  })))) : React.createElement("div", {
                          className: "article-preview"
                        }, Utils$ReasonReactRealworldExampleApp.strEl("ERROR: " + files[0]))
                );
              var tmp$2;
              tmp$2 = typeof files === "number" || files.tag !== 1 ? Utils$ReasonReactRealworldExampleApp.nullEl : ReasonReact.element(undefined, undefined, Pagination$ReasonReactRealworldExampleApp.make(state[/* currentPage */5], state[/* filesCount */4], 10, (function (page) {
                            return Curry._1(send, /* ChangeFeed */Block.__(1, [
                                          feed,
                                          page
                                        ]));
                          }), /* array */[]));
              return React.createElement("div", {
                          className: "home-page"
                        }, React.createElement("div", {
                              className: "banner"
                            }, React.createElement("div", {
                                  className: "container"
                                }, React.createElement("h1", {
                                      className: "logo-font"
                                    }, Utils$ReasonReactRealworldExampleApp.strEl("content")))), React.createElement("div", {
                              className: "container page"
                            }, React.createElement("div", {
                                  className: "row"
                                }, React.createElement("div", {
                                      className: "col-md-9"
                                    }, React.createElement("div", {
                                          className: "feed-toggle"
                                        }, React.createElement("ul", {
                                              className: "nav nav-pills outline-active"
                                            }, tmp, React.createElement("li", {
                                                  className: "nav-item"
                                                }, React.createElement("a", {
                                                      className: "nav-link" + (
                                                        match$1 ? " active" : ""
                                                      ),
                                                      href: "#",
                                                      onClick: Curry._1(handle, (function (param, param$1) {
                                                              return onGlobalFeedClick(feed, param, param$1);
                                                            }))
                                                    }, Utils$ReasonReactRealworldExampleApp.strEl("Global Feed"))), typeof feed === "number" ? Utils$ReasonReactRealworldExampleApp.nullEl : React.createElement("li", {
                                                    className: "nav-item"
                                                  }, React.createElement("a", {
                                                        className: "nav-link active"
                                                      }, Utils$ReasonReactRealworldExampleApp.strEl("#" + feed[0]))))), tmp$1, tmp$2))));
            }),
          /* initialState */(function () {
              return /* record */[
                      /* articles : NotAsked */0,
                      /* files : NotAsked */0,
                      /* tags : NotAsked */0,
                      /* articlesCount */0,
                      /* filesCount */0,
                      /* currentPage */1,
                      /* feed : Global */0,
                      /* togglingFavorites */Belt_MapString.empty
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              switch (action.tag | 0) {
                case 0 : 
                    var value = action[1];
                    var togglingFavorites = Belt_MapString.update(state[/* togglingFavorites */7], action[0], (function () {
                            return value;
                          }));
                    return /* Update */Block.__(0, [/* record */[
                                /* articles */state[/* articles */0],
                                /* files */state[/* files */1],
                                /* tags */state[/* tags */2],
                                /* articlesCount */state[/* articlesCount */3],
                                /* filesCount */state[/* filesCount */4],
                                /* currentPage */state[/* currentPage */5],
                                /* feed */state[/* feed */6],
                                /* togglingFavorites */togglingFavorites
                              ]]);
                case 1 : 
                    var page = action[1];
                    var feed = action[0];
                    return /* UpdateWithSideEffects */Block.__(2, [
                              /* record */[
                                /* articles */state[/* articles */0],
                                /* files */state[/* files */1],
                                /* tags */state[/* tags */2],
                                /* articlesCount */state[/* articlesCount */3],
                                /* filesCount */state[/* filesCount */4],
                                /* currentPage */page,
                                /* feed */feed,
                                /* togglingFavorites */state[/* togglingFavorites */7]
                              ],
                              (function (param) {
                                  var handle = param[/* handle */0];
                                  if (typeof feed === "number") {
                                    if (feed !== 0) {
                                      Curry._2(handle, (function (eta) {
                                              var arg = page;
                                              var partial_arg = (function (param) {
                                                    return (function (param$1, param$2) {
                                                        return loadGlobalFeed(param, arg, param$1, param$2);
                                                      });
                                                  })(undefined);
                                              return (function (param) {
                                                  return partial_arg(eta, param);
                                                });
                                            }), /* () */0);
                                    } else {
                                      Curry._2(handle, (function (eta) {
                                              var arg = page;
                                              var partial_arg = (function (param) {
                                                    return (function (param$1, param$2) {
                                                        return loadGlobalFeed(param, arg, param$1, param$2);
                                                      });
                                                  })(undefined);
                                              return (function (param) {
                                                  return partial_arg(eta, param);
                                                });
                                            }), /* () */0);
                                    }
                                  } else {
                                    Curry._2(handle, (function (eta) {
                                            var arg = page;
                                            var partial_arg = (function (param) {
                                                  return (function (param$1, param$2) {
                                                      return loadGlobalFeed(param, arg, param$1, param$2);
                                                    });
                                                })(undefined);
                                            return (function (param) {
                                                return partial_arg(eta, param);
                                              });
                                          }), /* () */0);
                                  }
                                  return /* () */0;
                                })
                            ]);
                case 2 : 
                    return /* Update */Block.__(0, [/* record */[
                                /* articles */state[/* articles */0],
                                /* files */state[/* files */1],
                                /* tags */action[0],
                                /* articlesCount */state[/* articlesCount */3],
                                /* filesCount */state[/* filesCount */4],
                                /* currentPage */state[/* currentPage */5],
                                /* feed */state[/* feed */6],
                                /* togglingFavorites */state[/* togglingFavorites */7]
                              ]]);
                case 3 : 
                    var article = action[1];
                    var slug = action[0];
                    var articles = RemoteData.map((function (articles) {
                            return Belt_List.map(articles, (function (x) {
                                          var match = x[/* slug */0] === slug;
                                          if (match) {
                                            return article;
                                          } else {
                                            return x;
                                          }
                                        }));
                          }), state[/* articles */0]);
                    return /* Update */Block.__(0, [/* record */[
                                /* articles */articles,
                                /* files */state[/* files */1],
                                /* tags */state[/* tags */2],
                                /* articlesCount */state[/* articlesCount */3],
                                /* filesCount */state[/* filesCount */4],
                                /* currentPage */state[/* currentPage */5],
                                /* feed */state[/* feed */6],
                                /* togglingFavorites */state[/* togglingFavorites */7]
                              ]]);
                case 4 : 
                    var match = action[0];
                    return /* Update */Block.__(0, [/* record */[
                                /* articles */match[0],
                                /* files */state[/* files */1],
                                /* tags */state[/* tags */2],
                                /* articlesCount */match[1],
                                /* filesCount */state[/* filesCount */4],
                                /* currentPage */match[2],
                                /* feed */state[/* feed */6],
                                /* togglingFavorites */state[/* togglingFavorites */7]
                              ]]);
                case 5 : 
                    var file = action[1];
                    var guid = action[0];
                    var files = RemoteData.map((function (files) {
                            return Belt_List.map(files, (function (x) {
                                          var match = x[/* guid */5] === guid;
                                          if (match) {
                                            return file;
                                          } else {
                                            return x;
                                          }
                                        }));
                          }), state[/* files */1]);
                    return /* Update */Block.__(0, [/* record */[
                                /* articles */state[/* articles */0],
                                /* files */files,
                                /* tags */state[/* tags */2],
                                /* articlesCount */state[/* articlesCount */3],
                                /* filesCount */state[/* filesCount */4],
                                /* currentPage */state[/* currentPage */5],
                                /* feed */state[/* feed */6],
                                /* togglingFavorites */state[/* togglingFavorites */7]
                              ]]);
                case 6 : 
                    var match$1 = action[0];
                    return /* Update */Block.__(0, [/* record */[
                                /* articles */state[/* articles */0],
                                /* files */match$1[0],
                                /* tags */state[/* tags */2],
                                /* articlesCount */state[/* articlesCount */3],
                                /* filesCount */match$1[1],
                                /* currentPage */match$1[2],
                                /* feed */state[/* feed */6],
                                /* togglingFavorites */state[/* togglingFavorites */7]
                              ]]);
                
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var pageNum = 10;

exports.pageNum = pageNum;
exports.loadGlobalFeed = loadGlobalFeed;
exports.onYourFeedClick = onYourFeedClick;
exports.onGlobalFeedClick = onGlobalFeedClick;
exports.initialData = initialData;
exports.favoriteArticle = favoriteArticle;
exports.component = component;
exports.make = make;
/* component Not a pure module */

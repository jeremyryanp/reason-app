// Generated by BUCKLESCRIPT VERSION 4.0.5, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Js_primitive = require("bs-platform/lib/js/js_primitive.js");
var Formality__Form = require("re-formality/src/Formality__Form.bs.js");
var Formality__Validation = require("re-formality/src/Formality__Validation.bs.js");
var Formality__PublicHelpers = require("re-formality/src/Formality__PublicHelpers.bs.js");
var Img$ReasonReactRealworldExampleApp = require("./Img.bs.js");
var Utils$ReasonReactRealworldExampleApp = require("./Utils.bs.js");
var Errors$ReasonReactRealworldExampleApp = require("./Errors.bs.js");
var Fragment$ReasonReactRealworldExampleApp = require("./Fragment.bs.js");

function get(_, state) {
  return state;
}

function update(param, _) {
  return param[1];
}

function valueEmpty(value) {
  return value === "";
}

var Validators = Formality__Validation.MakeValidators(/* module */[]);

var validators = Curry._3(Validators[/* add */3], /* Body */0, /* record */[
      /* strategy : OnFirstSuccessOrFirstBlur */3,
      /* dependents */undefined,
      /* validate */(function (value, _) {
          if (value === "") {
            return /* Invalid */["Comment is empty"];
          } else {
            return /* Valid */0;
          }
        })
    ], Validators[/* empty */0]);

var Form = /* module */[
  /* get */get,
  /* update */update,
  /* valueEmpty */valueEmpty,
  /* strategy : OnFirstSuccessOrFirstBlur */3,
  /* Validators */Validators,
  /* validators */validators
];

var FormContainer = Formality__Form.Make([
      get,
      update,
      valueEmpty,
      validators,
      [
        Validators[21],
        Validators[10]
      ]
    ]);

var component = ReasonReact.statelessComponent("Comment");

function make($staropt$star, user, _) {
  var onSubmit = $staropt$star !== undefined ? $staropt$star : (function (_, _$1) {
        return /* () */0;
      });
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function () {
              var exit = 0;
              if (typeof user === "number") {
                if (user === 0) {
                  exit = 1;
                } else {
                  return Utils$ReasonReactRealworldExampleApp.strEl("Loading...");
                }
              } else if (user.tag) {
                var image = user[0][/* image */2];
                return ReasonReact.element(undefined, undefined, Curry._3(FormContainer[/* make */8], "", onSubmit, (function (form) {
                                  var match = form[/* status */1];
                                  var errors;
                                  if (typeof match === "number") {
                                    errors = match !== 0 ? undefined : Utils$ReasonReactRealworldExampleApp.getSomeErrors(form[/* results */2], /* :: */[
                                            /* Body */0,
                                            /* [] */0
                                          ]);
                                  } else {
                                    var match$1 = match[1];
                                    var fieldErrors = match[0];
                                    errors = match$1 !== undefined ? Belt_List.concat(Belt_List.mapU(fieldErrors, (function (param) {
                                                  return param[1];
                                                })), /* :: */[
                                            match$1,
                                            /* [] */0
                                          ]) : Belt_List.mapU(fieldErrors, (function (param) {
                                              return param[1];
                                            }));
                                  }
                                  var partial_arg = form[/* submit */6];
                                  var partial_arg$1 = Formality__PublicHelpers.Dom[/* preventDefault */4];
                                  return ReasonReact.element(undefined, undefined, Fragment$ReasonReactRealworldExampleApp.make(/* array */[
                                                  ReasonReact.element(undefined, undefined, Errors$ReasonReactRealworldExampleApp.make(errors, /* array */[])),
                                                  React.createElement("form", {
                                                        className: "card comment-form",
                                                        onSubmit: (function (param) {
                                                            return partial_arg$1(partial_arg, param);
                                                          })
                                                      }, React.createElement("div", {
                                                            className: "card-block"
                                                          }, React.createElement("textarea", {
                                                                className: "form-control",
                                                                disabled: form[/* submitting */3],
                                                                placeholder: "Write a comment...",
                                                                rows: 3,
                                                                value: form[/* state */0],
                                                                onBlur: (function ($$event) {
                                                                    return Curry._2(form[/* change */4], /* Body */0, Formality__PublicHelpers.Dom[/* toValueOnBlur */1]($$event));
                                                                  }),
                                                                onChange: (function ($$event) {
                                                                    return Curry._2(form[/* change */4], /* Body */0, Formality__PublicHelpers.Dom[/* toValueOnChange */0]($$event));
                                                                  })
                                                              })), React.createElement("div", {
                                                            className: "card-footer"
                                                          }, ReasonReact.element(undefined, undefined, Img$ReasonReactRealworldExampleApp.make(Js_primitive.some(image), undefined, undefined, "comment-author-img", /* array */[])), React.createElement("button", {
                                                                className: "btn btn-sm btn-primary"
                                                              }, Utils$ReasonReactRealworldExampleApp.strEl("Post Comment"))))
                                                ]));
                                })));
              } else {
                exit = 1;
              }
              if (exit === 1) {
                return React.createElement("p", undefined, React.createElement("a", {
                                href: "#/login"
                              }, Utils$ReasonReactRealworldExampleApp.strEl("Sign in")), Utils$ReasonReactRealworldExampleApp.strEl(" or "), React.createElement("a", {
                                href: "#/register"
                              }, Utils$ReasonReactRealworldExampleApp.strEl("sign up")), Utils$ReasonReactRealworldExampleApp.strEl(" to add comments on this article."));
              }
              
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.Form = Form;
exports.FormContainer = FormContainer;
exports.component = component;
exports.make = make;
/* Validators Not a pure module */
